<div class="columns">
  <div class="column">
    <div class="mq-assessment-box">
      <p>
        Current level
      </p>
      <%= render 'mq_level', level: assessment.level, status: assessment.status %>
      <p class="level-description">
        <%= t("tpi.company.level_description.#{assessment.level.to_i}") %></h3>
      </p>

      <%= render 'mq_assessment_answers_summary', assessment: assessment %>
    </div>
  </div>

  <div class="column">
    <div class="mq-assessment-box">
      <div class="is-hidden-touch">Nr of assessments: <%= assessment.previous_assessments.size + 1 %></div>
      <div class="is-hidden-desktop">
        Number of assessments: <span class="assessment-count"><%= assessment.previous_assessments.size + 1 %></span>
      </div>

      <%= react_component('charts/mq-level', {
        dataUrl: assessments_levels_chart_data_tpi_company_path(@company.id, mq_assessment_id: assessment.id)
      }) %>
    </div>
  </div>
</div>

<div class="mq-assessment-questions">
  <% assessment.questions_by_level.each do |level, questions| %>
    <div class="mq-assessment-level level<%= level %>">
      <p class="mq-assessment-level__header">
        Level <%= level.in?(assessment.beta_levels) ? "#{level} [BETA]" : level %>: <%= t("tpi.company.level_description.#{level}") %>
      </p>

      <div class="mq-assessment-answers">
        <% questions.each do |question| %>

          <p class="<%= class_names('mq-assessment-question', 'highlight-question': MQ::Assessment::BETA_METHODOLOGIES.dig(assessment.methodology_version, :highlight_questions)&.include?(question.number.to_s)) %>">
            <span class="mq-assessment-answer mq-assessment-answer--<%= question.answer.parameterize %> level<%= level %>">
            </span>
            <span class="question-text"><%= question.number %>. <%= question.question %></span>
          </p>
        <% end %>
      </div>
    </div>
  <% end %>
</div>
