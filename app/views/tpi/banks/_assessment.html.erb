<%= react_component('BankingQuestionLegend') %>
<div class="bank-assessment__indicators-legend">
  <div>
    <%= svg "icons/white-chevron-down", class: 'svg-chevron-average' %>
    <span>All banks average</span>
  </div>
  <div>
    <%= svg "icons/white-chevron-down", class: 'svg-chevron-max' %>
    <span>All banks max score</span>
  </div>
</div>

<% areas = assessment.results.of_type("area").order('length(bank_assessment_indicators.number), bank_assessment_indicators.number') %>

<% if areas.empty? %>
  <%# No active results found, show notice and create virtual areas from active indicators %>
  <h3 class="cp_assessments_title" style="margin: 25px 0">
    Net Zero Banking Assessment Framework
  </h3>  

  <%# Create virtual areas from active indicators %>
  <% active_indicators = BankAssessmentIndicator.active.where(indicator_type: 'area').order(:number) %>
  <% areas = active_indicators.map do |indicator|
    area = OpenStruct.new(
      id: "virtual_#{indicator.id}",
      indicator: indicator,
      percentage: 0
    )
    area.define_singleton_method(:virtual?) { true }
    area
  end %>
<% end %>

<% areas.each do |area| %>
  <input id="<%= area.respond_to?(:virtual?) && area.virtual? ? area.id : dom_id(area) %>" type="checkbox" class="toggle" />
  <div class="bank-assessment__area">
    <div for="<%= area.respond_to?(:virtual?) && area.virtual? ? area.id : dom_id(area) %>" class="bank-assessment__area-header">
      <div class="bank-assessment__area-indicator">
        <small>Area <%= area.indicator.number %></small>
        <h2><%= area.indicator.text %></h2>
      </div>
      <%
        average_score = number_with_precision(assessment.average_bank_score[area.indicator.text], precision: 1, strip_insignificant_zeros: true)
        max_score = number_with_precision(assessment.max_bank_score[area.indicator.text], precision: 1, strip_insignificant_zeros: true)
      %>
      <div class="bank-assessment__area-value">
        <div
          class="bank-assessment__area-value-average"
          style="left: <%= average_score %>%;"
        >
          <%= svg "icons/white-chevron-down" %>
          <div class="bank-assessment__tooltip">
            <div class="bank-assessment__tooltip-header">ALL BANKS AVERAGE</div>
            <div class="bank-assessment__tooltip-text"><%= average_score %>%</div>
          </div>
        </div>
        <div
          class="bank-assessment__area-value-max"
          style="left: <%= max_score %>%;"
        >
          <%= svg "icons/white-chevron-down" %>
          <div class="bank-assessment__tooltip">
            <div class="bank-assessment__tooltip-header">ALL BANKS MAX SCORE</div>
            <div class="bank-assessment__tooltip-text"><%= max_score %>%</div>
          </div>
        </div>
        <div class="bank-assessment__area-value-progress" style="width: <%= (area.percentage || 0).to_i %>%;">
          <% if area.percentage && area.percentage >= 5 %>
            <div class="bank-assessment__area-value-value">
              <%= number_with_precision(area.percentage, precision: 1, strip_insignificant_zeros: true) %>%
            </div>
          <% end %>
        </div>
        <% if area.percentage.nil? || area.percentage < 5 %>
          <div class="bank-assessment__area-value-value">
            <% if area.respond_to?(:virtual?) && area.virtual? %>
              N/A
            <% elsif area.indicator.is_placeholder %>
              N/A
            <% else %>
              <%= number_with_precision(area.percentage, precision: 1, strip_insignificant_zeros: true) %>%
            <% end %>
          </div>
        <% end %>
      </div>
      <% if area.indicator.comment.present? %>
        <div class="bank-assessment__area-comment">
          <%= area.indicator.comment %>
        </div>
      <% end %>
      <label class="bank-assessment__more" for="<%= area.respond_to?(:virtual?) && area.virtual? ? area.id : dom_id(area) %>">
      </label>
    </div>

    <div class="bank-assessment__area-content">
      <% if area.respond_to?(:virtual?) && area.virtual? %>
        <%# For virtual areas, get indicators directly since there are no sub-areas in the new framework %>
        <% indicators = BankAssessmentIndicator.active.where(indicator_type: 'indicator').select { |i| i.number.start_with?("#{area.indicator.number}.") } %>
        <% indicators = indicators.map do |indicator|
          indicator_obj = OpenStruct.new(
            id: "virtual_#{indicator.id}",
            indicator: indicator,
            percentage: nil,
            answer: 'N/A'
          )
          indicator_obj.define_singleton_method(:virtual?) { true }
          indicator_obj
        end %>
        <%= render "indicators", assessment: assessment, area: area, indicators: indicators %>
      <% else %>
        <% sub_areas = assessment.child_indicators(area, "sub_area") %>

        <% if sub_areas.any? %>
          <% sub_areas.each do |sub_area| %>
            <input id="<%= dom_id(sub_area) %>" type="checkbox" class="toggle" checked />
            <div class="bank-assessment__sub-area">
              <div class="bank-assessment__sub-area-header">
                <h3>
                  <%= sub_area.indicator.display_text %>
                </h3>

                <label class="bank-assessment__more" for="<%= dom_id(sub_area) %>">
                </label>
              </div>

              <div class="bank-assessment__area-content">
                <%= render "indicators", assessment: assessment, area: area, indicators: assessment.child_indicators(sub_area, "indicator") %>
              </div>
            </div>
          <% end %>
        <% else %>
          <%= render "indicators", assessment: assessment, area: area, indicators: assessment.child_indicators(area, "indicator") %>
        <% end %>
      <% end %>
    </div>
  </div>
<% end %>
